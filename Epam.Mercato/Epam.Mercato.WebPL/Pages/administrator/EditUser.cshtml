@using Epam.Mercato.BLL.Interfaces;
@using Epam.Mercato.Entities;
@using Epam.Mercato.IOC;
@using Epam.Mercato.WebPL.Models;
@{
    Layout = "~/Pages/administrator/_AdministratorLayout.cshtml";
    Page.Title = "Edit user";
    AdministratorRoleProvider roleProvider = new AdministratorRoleProvider();
    if (!(roleProvider.IsUserInRole(User.Identity.Name, "administrator") | roleProvider.IsUserInRole(User.Identity.Name, "moderator")))
    {
        Response.Redirect("~/Pages/administrator/SignIn");
    }
    IModeratorLogic moderatorLogic = DependencyResolver.ModeratorLogic;
    Moderator moderatorForEdit = null;
    int id = 0;
    var user = moderatorLogic.GetAll().FirstOrDefault(x => x.Value.Login == User.Identity.Name);
    id = user.Key;
    string errorMessage = null;
    if (!IsPost)
    {
        if (id != 0)
        {
            if (moderatorLogic.GetById(id) != null)
            {
                moderatorForEdit = moderatorLogic.GetById(id);
            }
        }
    }
    if (IsPost)
    {
        if (id != 0)
        {
            string login = Request["login"];
            string password = Request["password"];
            string role = Request["role"];
            Role newRole = new Role();
            if (!roleProvider.IsUserInRole(User.Identity.Name, "Administrator"))
            {
                newRole = user.Value.ModeratorRole;
                role = newRole.ToString();
            }
            if (user.Value.Login != login && !moderatorLogic.IsUniqueLogin(login))
            {
                errorMessage = "Moderator with this username already exists!";
            }
            if (!moderatorLogic.IsValidLogin(login))
            {
                errorMessage = "Invalid Login. Login must contain letters a-z A-Z or degrees 0-9. Password must contain 6 and more symbols. Login must start with letter!";
            }
            if (!moderatorLogic.IsValidPassword(password))
            {
                errorMessage = "Invalid Password. Password must contain letters a-z A-Z, degrees 0-9 or symbols [!, $, .]. Password must contain 8 and more symbols!";
            }
            if (!Enum.TryParse(role, true, out newRole))
            {
                errorMessage = "You must choose role!";
            }
            if (errorMessage == null)
            {
                moderatorLogic.EditModerator(id, login, password, newRole);
                Response.Redirect("~/Pages/administrator");
            }
        }
    }
}

    <form action="~/Pages/administrator/EditUser.cshtml" method="post">
        <div class="form-group row">
            <label for="login" class="col-sm-2 col-form-label">Login</label>
            <div class="col-sm-6">
                <input type="text" name="login" id="login" class="form-control" value="@if (moderatorForEdit != null) {@moderatorForEdit.Login}" />
            </div>
        </div>
        <div class="form-group row">
            <label for="password" class="col-sm-2 col-form-label">Password</label>
            <div class="col-sm-6">
                <input type="password" name="password" id="password" class="form-control" />
            </div>
        </div>
        @if (roleProvider.IsUserInRole(User.Identity.Name, "Administrator"))
        {
            <div class="form-group row col-sm-12">
                <div class="form-check form-check-inline">
                    <input type="radio" id="moderator" class="form-check-input" name="role" value="Moderator" @if (moderatorForEdit != null && moderatorForEdit.ModeratorRole == Role.moderator) { <text> checked</text>}>
                    <label for="moderator" class="col-sm-2 col-form-label">Moderator</label>
                </div>
                <div class="form-check form-check-inline">
                    <input type="radio" id="administrator" name="role" value="Administrator" @if (moderatorForEdit != null && moderatorForEdit.ModeratorRole == Role.administrator) { <text> checked</text>}>
                    <label for="administrator" class="col-sm-2 col-form-label">Administrator</label>
                </div>
            </div>
        }
        <button type="submit" class="btn btn-primary mb-2">Edit</button>
        <a href="~/Pages/administrator/"><div class="btn btn-dark mb-2">Back to administrator panel</div></a>
    </form>
    @if (errorMessage != null)
    {
        <div class="alert-danger">@errorMessage</div>
    }

